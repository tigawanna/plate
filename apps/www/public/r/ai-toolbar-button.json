{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-toolbar-button",
  "type": "registry:ui",
  "title": "AI Toolbar Button",
  "description": "A toolbar button for accessing AI features.",
  "dependencies": [
    "@platejs/ai"
  ],
  "registryDependencies": [
    "https://platejs.org/r/toolbar"
  ],
  "files": [
    {
      "path": "src/registry/ui/ai-toolbar-button.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport { AIChatPlugin } from '@platejs/ai/react';\nimport { useEditorPlugin, useEditorRef } from 'platejs/react';\n\nimport { ToolbarButton } from './toolbar';\n\nexport const commentPrompt = `Please comment on the following content and provide reasonable and meaningful feedback`;\n\nexport function AICommentToolbarButton(\n  props: React.ComponentProps<typeof ToolbarButton>\n) {\n  const editor = useEditorRef();\n\n  return (\n    <ToolbarButton\n      {...props}\n      onClick={() =>\n        editor\n          .getApi(AIChatPlugin)\n          .aiChat.submit(commentPrompt, { mode: 'insert', toolName: 'comment' })\n      }\n      onMouseDown={(e) => e.preventDefault()}\n    >\n      <AICommentIcon />\n    </ToolbarButton>\n  );\n}\n\nconst AICommentIcon = () => (\n  <svg\n    fill=\"none\"\n    height=\"24\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" stroke=\"none\" />\n    <path d=\"M8 9h8\" />\n    <path d=\"M8 13h4.5\" />\n    <path d=\"M10 19l-1 -1h-3a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v4.5\" />\n    <path d=\"M17.8 20.817l-2.172 1.138a.392 .392 0 0 1 -.568 -.41l.415 -2.411l-1.757 -1.707a.389 .389 0 0 1 .217 -.665l2.428 -.352l1.086 -2.193a.392 .392 0 0 1 .702 0l1.086 2.193l2.428 .352a.39 .39 0 0 1 .217 .665l-1.757 1.707l.414 2.41a.39 .39 0 0 1 -.567 .411l-2.172 -1.138z\" />\n  </svg>\n);\n\nexport function AIToolbarButton(\n  props: React.ComponentProps<typeof ToolbarButton>\n) {\n  const { api } = useEditorPlugin(AIChatPlugin);\n\n  return (\n    <ToolbarButton\n      {...props}\n      onClick={() => {\n        api.aiChat.show();\n      }}\n      onMouseDown={(e) => {\n        e.preventDefault();\n      }}\n    />\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/ai",
        "title": "AI"
      },
      {
        "route": "https://pro.platejs.org/docs/components/ai-toolbar-button"
      }
    ],
    "examples": [
      "ai-demo",
      "floating-toolbar-demo",
      "ai-pro"
    ],
    "label": "New"
  }
}